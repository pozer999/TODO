{"ast":null,"code":"var _jsxFileName = \"/home/pozer/react/TODO/todo/src/pages/ui/TodoMain.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Space } from \"antd\";\nimport { useState } from \"react\";\nimport TodoList from \"widgets/TodoList/ui/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoMain = () => {\n  _s();\n  const [filteredInfo, setFilteredInfo] = useState({});\n  const [sortedInfo, setSortedInfo] = useState({});\n  const handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setFilteredInfo(filters);\n    setSortedInfo(sorter);\n  };\n  const clearFilters = () => {\n    setFilteredInfo({});\n  };\n  const clearAll = () => {\n    setFilteredInfo({});\n    setSortedInfo({});\n  };\n  const setAgeSort = () => {\n    setSortedInfo({\n      order: 'descend',\n      columnKey: 'age'\n    });\n  };\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    filters: [{\n      text: 'Joe',\n      value: 'Joe'\n    }, {\n      text: 'Jim',\n      value: 'Jim'\n    }],\n    filteredValue: filteredInfo.name || null,\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.name.length - b.name.length,\n    sortOrder: sortedInfo.columnKey === 'name' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n    sorter: (a, b) => a.age - b.age,\n    sortOrder: sortedInfo.columnKey === 'age' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n    filters: [{\n      text: 'London',\n      value: 'London'\n    }, {\n      text: 'New York',\n      value: 'New York'\n    }],\n    filteredValue: filteredInfo.address || null,\n    onFilter: (value, record) => record.address.includes(value),\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortOrder: sortedInfo.columnKey === 'address' ? sortedInfo.order : null,\n    ellipsis: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: setAgeSort,\n        children: \"Sort age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clearFilters,\n        children: \"Clear filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clearAll,\n        children: \"Clear filters and sorters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoMain, \"BKQbVyrT/nxAcqNiAC2laa6etYI=\");\n_c = TodoMain;\nexport default TodoMain;\nvar _c;\n$RefreshReg$(_c, \"TodoMain\");","map":{"version":3,"names":["Button","Space","useState","TodoList","jsxDEV","_jsxDEV","TodoMain","_s","filteredInfo","setFilteredInfo","sortedInfo","setSortedInfo","handleChange","pagination","filters","sorter","console","log","clearFilters","clearAll","setAgeSort","order","columnKey","columns","title","dataIndex","key","text","value","filteredValue","name","onFilter","record","includes","a","b","length","sortOrder","ellipsis","age","address","children","style","marginBottom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pozer/react/TODO/todo/src/pages/ui/TodoMain.tsx"],"sourcesContent":["import { Button, Space, TableProps } from \"antd\";\nimport { DataSourceItemType } from \"antd/es/auto-complete\";\nimport { ColumnsType, SorterResult } from \"antd/es/table/interface\";\nimport { useState } from \"react\";\nimport TodoList from \"widgets/TodoList/ui/TodoList\";\n\nconst TodoMain = () => {\n    const [filteredInfo, setFilteredInfo] = useState<Record<string, FilterValue | null>>({});\n    const [sortedInfo, setSortedInfo] = useState<SorterResult<DataType>>({});\n  \n    const handleChange: TableProps<DataSourceItemType>['onChange'] = (pagination, filters, sorter) => {\n      console.log('Various parameters', pagination, filters, sorter);\n      setFilteredInfo(filters);\n      setSortedInfo(sorter as SorterResult<DataSourceItemType>);\n    };\n  \n    const clearFilters = () => {\n      setFilteredInfo({});\n    };\n  \n    const clearAll = () => {\n      setFilteredInfo({});\n      setSortedInfo({});\n    };\n  \n    const setAgeSort = () => {\n      setSortedInfo({\n        order: 'descend',\n        columnKey: 'age',\n      });\n    };\n  \n    const columns: ColumnsType<DataType> = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        filters: [\n          { text: 'Joe', value: 'Joe' },\n          { text: 'Jim', value: 'Jim' },\n        ],\n        filteredValue: filteredInfo.name || null,\n        onFilter: (value: string, record) => record.name.includes(value),\n        sorter: (a, b) => a.name.length - b.name.length,\n        sortOrder: sortedInfo.columnKey === 'name' ? sortedInfo.order : null,\n        ellipsis: true,\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        sorter: (a, b) => a.age - b.age,\n        sortOrder: sortedInfo.columnKey === 'age' ? sortedInfo.order : null,\n        ellipsis: true,\n      },\n      {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n        filters: [\n          { text: 'London', value: 'London' },\n          { text: 'New York', value: 'New York' },\n        ],\n        filteredValue: filteredInfo.address || null,\n        onFilter: (value: string, record) => record.address.includes(value),\n        sorter: (a, b) => a.address.length - b.address.length,\n        sortOrder: sortedInfo.columnKey === 'address' ? sortedInfo.order : null,\n        ellipsis: true,\n      },\n    ];\n    return (\n        <div>\n            <Space style={{ marginBottom: 16 }}>\n                <Button onClick={setAgeSort}>Sort age</Button>\n                <Button onClick={clearFilters}>Clear filters</Button>\n                <Button onClick={clearAll}>Clear filters and sorters</Button>\n            </Space>\n            <TodoList />\n        </div>\n    );\n};\nexport default TodoMain;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}