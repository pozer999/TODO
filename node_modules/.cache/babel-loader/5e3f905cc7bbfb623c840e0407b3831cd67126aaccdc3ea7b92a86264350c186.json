{"ast":null,"code":"var _jsxFileName = \"/home/pozer/react/TODO/todo/src/widgets/TodoList/ui/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport { Alert } from \"antd\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  // const valueInput = useSelector((state: RootState) => state.inputPanel.inputValue);\n  const todoItems = useSelector(state => state.inputPanel.todoItems);\n  useEffect(() => {\n    console.log(todoItems);\n  }, [todoItems]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todoItems.map((item, index) => /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"success\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"hEmqvYQsU4vKunWCoHRD458W+wQ=\", false, function () {\n  return [useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["Alert","useEffect","useSelector","jsxDEV","_jsxDEV","TodoList","_s","todoItems","state","inputPanel","console","log","children","map","item","index","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pozer/react/TODO/todo/src/widgets/TodoList/ui/TodoList.tsx"],"sourcesContent":["import { Alert, Avatar, Card, Divider, List, Skeleton } from \"antd\";\nimport { RootState } from \"app/store\";\nimport { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useSelector } from \"react-redux\";\n\ninterface DataType {\n    gender: string;\n    name: {\n        title: string;\n        first: string;\n        last: string;\n    };\n    email: string;\n    picture: {\n        large: string;\n        medium: string;\n        thumbnail: string;\n    };\n    nat: string;\n}\n\nconst TodoList = () => {\n    // const valueInput = useSelector((state: RootState) => state.inputPanel.inputValue);\n    const todoItems = useSelector(\n        (state: RootState) => state.inputPanel.todoItems\n    );\n\n    useEffect(() => {\n        console.log(todoItems);\n    }, [todoItems]);\n\n    return (\n        <div\n            // id=\"scrollableDiv\"\n            // style={{\n            //     height: 400,\n            //     overflow: \"auto\",\n            //     padding: \"0 16px\",\n            //     border: \"1px solid rgba(140, 140, 140, 0.35)\",\n            //     borderRadius: \"4px\",\n            //     margin: \"5px 0\",\n            // }}\n        >\n            {/* <InfiniteScroll\n                dataLength={todoItems.length}\n                next={() => console.log(\"loading\")}\n                hasMore={todoItems.length < 50}\n                loader={<Skeleton avatar paragraph={{ rows: 1 }} active />}\n                endMessage={<Divider plain>It is all, nothing more ü§ê</Divider>}\n                scrollableTarget=\"scrollableDiv\"\n            > */}\n                {todoItems.map((item, index) => (\n                    <Alert type=\"success\" key={index}></Alert>\n                ))}\n            {/* </InfiniteScroll> */}\n        </div>\n    );\n};\n\nexport default TodoList;\n"],"mappings":";;AAAA,SAASA,KAAK,QAA+C,MAAM;AAEnE,SAASC,SAAS,QAAkB,OAAO;AAE3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkB1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAMC,SAAS,GAAGL,WAAW,CACxBM,KAAgB,IAAKA,KAAK,CAACC,UAAU,CAACF,SAC3C,CAAC;EAEDN,SAAS,CAAC,MAAM;IACZS,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EAC1B,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACIH,OAAA;IAAAQ,QAAA,EAmBSL,SAAS,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBX,OAAA,CAACJ,KAAK;MAACgB,IAAI,EAAC;IAAS,GAAMD,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAACd,EAAA,CApCID,QAAQ;EAAA,QAEQH,WAAW;AAAA;AAAAmB,EAAA,GAF3BhB,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}