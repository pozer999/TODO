{"ast":null,"code":"var _jsxFileName = \"/home/pozer/react/TODO/todo/src/features/TodoNavbar/ui/TodoNavbar.tsx\",\n  _s = $RefreshSig$();\nimport Search from \"antd/es/input/Search\";\nimport { InputPanelActions } from \"features/InputPanel/InputPanelSlice\";\nimport { nanoid } from \"nanoid\";\nimport \"./TodoNavbar.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { wrapperMessage } from \"shared/helpers/messages/useMessage\";\nimport { Button, Form } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoNavbar = () => {\n  _s();\n  const dispatch = useDispatch();\n  const onSearch = title => {\n    if (title.length > 0) {\n      let id = nanoid();\n      let checked = false;\n      dispatch(InputPanelActions.changeInputValue({\n        id,\n        title,\n        checked\n      }));\n    } else {\n      wrapperMessage(\"Пожалуйста, введите название задачи\");\n    }\n  };\n  const searchValue = useSelector(state => state.inputPanel.inputValue);\n  const formRef = useRef(null);\n  const onReset = () => {\n    var _formRef$current;\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.resetFields();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      ref: formRef,\n      children: /*#__PURE__*/_jsxDEV(Search\n      // value={searchValue}\n      , {\n        size: \"large\",\n        placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443...\",\n        onSearch: onSearch,\n        enterButton: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"reset\",\n          type: \"primary\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(TodoNavbar, \"mmi1HUygE+nXcfX1uq83dXtv/Ms=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoNavbar;\nexport default TodoNavbar;\nvar _c;\n$RefreshReg$(_c, \"TodoNavbar\");","map":{"version":3,"names":["Search","InputPanelActions","nanoid","useDispatch","useSelector","wrapperMessage","Button","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoNavbar","_s","dispatch","onSearch","title","length","id","checked","changeInputValue","searchValue","state","inputPanel","inputValue","formRef","useRef","onReset","_formRef$current","current","resetFields","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","size","placeholder","enterButton","htmlType","type","_c","$RefreshReg$"],"sources":["/home/pozer/react/TODO/todo/src/features/TodoNavbar/ui/TodoNavbar.tsx"],"sourcesContent":["import Search, { SearchProps } from \"antd/es/input/Search\";\nimport { AppDispatch, RootState } from \"app/store\";\nimport { InputPanelActions } from \"features/InputPanel/InputPanelSlice\";\nimport { nanoid } from \"nanoid\";\nimport \"./TodoNavbar.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { wrapperMessage } from \"shared/helpers/messages/useMessage\";\nimport { Button, Form } from \"antd\";\n\nconst TodoNavbar = () => {\n    const dispatch = useDispatch<AppDispatch>();\n    const onSearch: SearchProps[\"onSearch\"] = (title) => {\n        if (title.length > 0) {\n            let id = nanoid();\n            let checked = false;\n            dispatch(\n                InputPanelActions.changeInputValue({ id, title, checked })\n            );\n        } else {\n            wrapperMessage(\"Пожалуйста, введите название задачи\");\n        }\n    };\n    const searchValue = useSelector((state: RootState) => state.inputPanel.inputValue);\n    const formRef = useRef<FormInstance>(null);\n    const onReset = () => {\n        formRef.current?.resetFields();\n      };\n      \n    return (\n        <>\n            <div className=\"text-container\">\n                <h1>Todo</h1>\n            </div>\n            <Form  ref={formRef}>\n            <Search\n                // value={searchValue}\n                size=\"large\"\n                placeholder=\"Добавить задачу...\"\n                onSearch={onSearch}\n                enterButton={<Button htmlType=\"reset\" type=\"primary\">Добавить</Button>}\n            /></Form>\n        </>\n    );\n};\n\nexport default TodoNavbar;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAuB,sBAAsB;AAE1D,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,mBAAmB;AAC1B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGX,WAAW,CAAc,CAAC;EAC3C,MAAMY,QAAiC,GAAIC,KAAK,IAAK;IACjD,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAClB,IAAIC,EAAE,GAAGhB,MAAM,CAAC,CAAC;MACjB,IAAIiB,OAAO,GAAG,KAAK;MACnBL,QAAQ,CACJb,iBAAiB,CAACmB,gBAAgB,CAAC;QAAEF,EAAE;QAAEF,KAAK;QAAEG;MAAQ,CAAC,CAC7D,CAAC;IACL,CAAC,MAAM;MACHd,cAAc,CAAC,qCAAqC,CAAC;IACzD;EACJ,CAAC;EACD,MAAMgB,WAAW,GAAGjB,WAAW,CAAEkB,KAAgB,IAAKA,KAAK,CAACC,UAAU,CAACC,UAAU,CAAC;EAClF,MAAMC,OAAO,GAAGC,MAAM,CAAe,IAAI,CAAC;EAC1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAAA,IAAAC,gBAAA;IAClB,CAAAA,gBAAA,GAAAH,OAAO,CAACI,OAAO,cAAAD,gBAAA,uBAAfA,gBAAA,CAAiBE,WAAW,CAAC,CAAC;EAChC,CAAC;EAEH,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACItB,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC3BtB,OAAA;QAAAsB,QAAA,EAAI;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACN3B,OAAA,CAACF,IAAI;MAAE8B,GAAG,EAAEZ,OAAQ;MAAAM,QAAA,eACpBtB,OAAA,CAACT;MACG;MAAA;QACAsC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,0FAAoB;QAChCxB,QAAQ,EAAEA,QAAS;QACnByB,WAAW,eAAE/B,OAAA,CAACH,MAAM;UAACmC,QAAQ,EAAC,OAAO;UAACC,IAAI,EAAC,SAAS;UAAAX,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACX,CAAC;AAEX,CAAC;AAACvB,EAAA,CAlCID,UAAU;EAAA,QACKT,WAAW,EAYRC,WAAW;AAAA;AAAAuC,EAAA,GAb7B/B,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}