{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  inputValue: \"\"\n};\nexport const InputPanelSlice = createSlice({\n  name: \"inputPanel\",\n  initialState,\n  reducers: {\n    changeInputValue(state, action) {\n      state.inputValue = action.payload;\n    }\n  }\n});\nexport const {\n  actions: InputPanelActions\n} = InputPanelSlice;\nexport const {\n  reducer: InputPanelReducer\n} = InputPanelSlice;","map":{"version":3,"names":["createSlice","initialState","inputValue","InputPanelSlice","name","reducers","changeInputValue","state","action","payload","actions","InputPanelActions","reducer","InputPanelReducer"],"sources":["/home/pozer/react/TODO/todo/src/features/InputPanel/InputPanelSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface InputPanelState {\n    inputValue: string;\n    \n}\n\nconst initialState: InputPanelState = {\n    inputValue: \"\",\n};\n\nexport const InputPanelSlice = createSlice({\n    name: \"inputPanel\",\n    initialState,\n    reducers: {\n        changeInputValue(state, action: PayloadAction<string>) {\n            state.inputValue = action.payload;\n        },\n    },\n});\n\nexport const { actions: InputPanelActions } = InputPanelSlice;\nexport const { reducer: InputPanelReducer } = InputPanelSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAQ9C,MAAMC,YAA6B,GAAG;EAClCC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGH,WAAW,CAAC;EACvCI,IAAI,EAAE,YAAY;EAClBH,YAAY;EACZI,QAAQ,EAAE;IACNC,gBAAgBA,CAACC,KAAK,EAAEC,MAA6B,EAAE;MACnDD,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACC,OAAO;IACrC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,OAAO,EAAEC;AAAkB,CAAC,GAAGR,eAAe;AAC7D,OAAO,MAAM;EAAES,OAAO,EAAEC;AAAkB,CAAC,GAAGV,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}