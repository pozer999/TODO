{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  inputValue: \"\",\n  todoItems: []\n};\nexport const InputPanelSlice = createSlice({\n  name: \"inputPanel\",\n  initialState,\n  reducers: {\n    changeInputValue(state, action) {\n      state.inputValue = action.payload.title;\n      // state.todoItems = [\n      //     ...state.todoItems,\n      //     {\n      //         id: action.payload.id,\n      //         title: action.payload.title,\n      //         checked: action.payload.checked,\n      //     },\n      // ];\n    },\n\n    deletedItem(state, action) {\n      state.todoItems = state.todoItems.filter(item => item.id !== action.payload);\n    },\n    checkedItem(state, action) {\n      state.todoItems = state.todoItems.map(item => {\n        if (item.id === action.payload) {\n          return {\n            ...item,\n            checked: !item.checked\n          };\n        }\n        return item;\n      });\n    }\n  }\n});\nexport const {\n  actions: InputPanelActions\n} = InputPanelSlice;\nexport const {\n  reducer: InputPanelReducer\n} = InputPanelSlice;","map":{"version":3,"names":["createSlice","initialState","inputValue","todoItems","InputPanelSlice","name","reducers","changeInputValue","state","action","payload","title","deletedItem","filter","item","id","checkedItem","map","checked","actions","InputPanelActions","reducer","InputPanelReducer"],"sources":["/home/pozer/react/TODO/todo/src/features/InputPanel/InputPanelSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface TodoItem {\n    id: string;\n    title: string;\n    checked: boolean;\n}\n\nexport interface InputPanelState {\n    inputValue: string;\n    todoItems: TodoItem[];\n}\nconst initialState: InputPanelState = {\n    inputValue: \"\",\n    todoItems: [],\n};\n\nexport const InputPanelSlice = createSlice({\n    name: \"inputPanel\",\n    initialState,\n    reducers: {\n        changeInputValue(state, action: PayloadAction<TodoItem>) {\n            state.inputValue = action.payload.title;\n            // state.todoItems = [\n            //     ...state.todoItems,\n            //     {\n            //         id: action.payload.id,\n            //         title: action.payload.title,\n            //         checked: action.payload.checked,\n            //     },\n            // ];\n        },\n        deletedItem(state, action: PayloadAction<any>) {\n            state.todoItems = state.todoItems.filter(\n                (item) => item.id !== action.payload\n            );\n        },\n        checkedItem(state, action: PayloadAction<any>) {\n            state.todoItems = state.todoItems.map((item) => {\n                if (item.id === action.payload) {\n                    return {\n                      ...item,\n                        checked:!item.checked,\n                    };\n                }\n                return item;\n            });\n        }\n    },\n});\n\nexport const { actions: InputPanelActions } = InputPanelSlice;\nexport const { reducer: InputPanelReducer } = InputPanelSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAa9C,MAAMC,YAA6B,GAAG;EAClCC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGJ,WAAW,CAAC;EACvCK,IAAI,EAAE,YAAY;EAClBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,gBAAgBA,CAACC,KAAK,EAAEC,MAA+B,EAAE;MACrDD,KAAK,CAACN,UAAU,GAAGO,MAAM,CAACC,OAAO,CAACC,KAAK;MACvC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC;;IACDC,WAAWA,CAACJ,KAAK,EAAEC,MAA0B,EAAE;MAC3CD,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACU,MAAM,CACnCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OACjC,CAAC;IACL,CAAC;IACDM,WAAWA,CAACR,KAAK,EAAEC,MAA0B,EAAE;MAC3CD,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACc,GAAG,CAAEH,IAAI,IAAK;QAC5C,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,EAAE;UAC5B,OAAO;YACL,GAAGI,IAAI;YACLI,OAAO,EAAC,CAACJ,IAAI,CAACI;UAClB,CAAC;QACL;QACA,OAAOJ,IAAI;MACf,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,OAAO,EAAEC;AAAkB,CAAC,GAAGhB,eAAe;AAC7D,OAAO,MAAM;EAAEiB,OAAO,EAAEC;AAAkB,CAAC,GAAGlB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}